image: Visual Studio 2017

version: 2.0.{build}

environment:
  global:
    DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
    DOTNET_CLI_TELEMETRY_OPTOUT: 1
  SONAR_TOKEN:
    secure: CL0ZiE9bx11SspBai6Hef/TZHeVVeqfJ29bkjHgcSGoKF+XtPqQnlHd6JcwscPdL
  GITHUB_ACCESS_TOKEN:
    secure: 33HkOpRzd2oV5gqorwoeU80F3KynRJwjCRIMRTESBBiJYYUW4sG+9jCGCsEyo+VS

branches:
  only:
    - master

# Do not build feature branch with open Pull Requests
skip_branch_with_pr: true

configuration: Release
platform: Any CPU
 
install:
  - ps: wget "https://raw.githubusercontent.com/rducom/ALM/master/build/ComputeVersion.ps1" -outfile "ComputeVersion.ps1"
  - ps: . .\ComputeVersion.ps1
  - ps: $version = Compute "TCC\TCC.csproj" $env:APPVEYOR_BUILD_NUMBER $env:APPVEYOR_REPO_TAG $env:APPVEYOR_PULL_REQUEST_NUMBER
  - ps: Update-AppveyorBuild -Version $version.Semver
  - choco install "msbuild-sonarqube-runner" -y
  - choco install opencover.portable
  - choco install codecov

before_build:
- nuget restore TCC.sln
- cmd: >-
    IF "%APPVEYOR_PULL_REQUEST_NUMBER%"=="" (
    C:\ProgramData\chocolatey\lib\msbuild-sonarqube-runner\tools\SonarScanner.MSBuild.exe begin /k:"TCC" /d:"sonar.analysis.mode=publish" /d:"sonar.host.url=https://sonarcloud.io" /d:"sonar.organization=rducom-github" /d:"sonar.login=%SONAR_TOKEN%" /d:sonar.cs.opencover.reportsPaths="coverage-opencover.xml" /v:%APPVEYOR_BUILD_VERSION% /d:sonar.coverage.exclusions="**/TCC.Tests/**/*"
    ) ELSE (
    C:\ProgramData\chocolatey\lib\msbuild-sonarqube-runner\tools\SonarScanner.MSBuild.exe begin /k:"TCC" /d:"sonar.analysis.mode=preview" /d:"sonar.host.url=https://sonarcloud.io" /d:"sonar.organization=rducom-github" /d:"sonar.login=%SONAR_TOKEN%" /d:sonar.cs.opencover.reportsPaths="coverage-opencover.xml" /d:sonar.coverage.exclusions="**/TCC.Tests/**/*" /d:"sonar.github.pullRequest=%APPVEYOR_PULL_REQUEST_NUMBER%" /d:"sonar.github.repository=rducom/TarCompressCrypt" /d:"sonar.github.oauth=%GITHUB_ACCESS_TOKEN%"
    )

build_script:
- ps: msbuild "TCC.sln" /m /verbosity:minimal /property:Configuration=Debug /logger:"C:\Program Files\AppVeyor\BuildAgent\Appveyor.MSBuildLogger.dll"

after_build:
- echo Rebuild in debug and Starting test coverage with OpenCover
- C:\ProgramData\chocolatey\bin\OpenCover.Console.exe -returntargetcode -oldstyle -register:user -target:"C:\Program Files\dotnet\dotnet.exe" -targetargs:"test /p:DebugType=full -c Debug TCC.Tests\TCC.Tests.csproj" -excludebyattribute:*.ExcludeFromCodeCoverage* -filter:"+[TCC*]* -[*Tests*]*" -output:coverage-opencover.xml
- cmd: >-
    "C:\ProgramData\chocolatey\lib\msbuild-sonarqube-runner\tools\SonarScanner.MSBuild.exe" end /d:"sonar.login=%SONAR_TOKEN%"

test_script:
- echo Sending to codecov
- codecov -f coverage-opencover.xml

after_test:
- dotnet publish -c Release -r win10-x64 TCC\TCC.csproj
- 7z a TCC-%APPVEYOR_BUILD_VERSION%-win10-x64.zip "%APPVEYOR_BUILD_FOLDER%\TCC\bin\Any CPU\Release\netcoreapp2.0\win10-x64\publish\*" -mx7
- dotnet publish -c Release -r win-x64 TCC\TCC.csproj
- 7z a TCC-%APPVEYOR_BUILD_VERSION%-win-x64.zip "%APPVEYOR_BUILD_FOLDER%\TCC\bin\Any CPU\Release\netcoreapp2.0\win-x64\publish\*" -mx7
- dotnet publish -c Release -r linux-x64 TCC\TCC.csproj
- 7z a TCC-%APPVEYOR_BUILD_VERSION%-linux-x64.zip "%APPVEYOR_BUILD_FOLDER%\TCC\bin\Any CPU\Release\netcoreapp2.0\linux-x64\publish\*" -mx7

artifacts:
  - path: '**\*-x64.zip'

deploy:
  provider: GitHub
  auth_token:
    secure: 33HkOpRzd2oV5gqorwoeU80F3KynRJwjCRIMRTESBBiJYYUW4sG+9jCGCsEyo+VS
  artifact: /.*-x64\.zip/
  on:
    branch: master                 # release from master branch only
    appveyor_repo_tag: true        # deploy on tag push only
